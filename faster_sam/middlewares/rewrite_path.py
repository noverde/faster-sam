import json

from starlette.middleware.base import BaseHTTPMiddleware, RequestResponseEndpoint
from starlette.requests import Request
from starlette.responses import Response
from starlette.types import ASGIApp


class RewritePathMiddleware(BaseHTTPMiddleware):
    """
    Rewrites a specified part of the request path.

    Parameters
    ----------
    app : ASGIApp
        Application instance the middleware is being registered to.
    path : str
        The part of the path to be removed from incoming requests.
    """

    def __init__(self, app: ASGIApp, path: str) -> None:
        """
        Initializes the RewritePathMiddleware.
        """
        super().__init__(app, self.dispatch)
        self.path = path

    async def dispatch(self, request: Request, call_next: RequestResponseEndpoint) -> Response:
        """
        Rewrites a specified part of the request path.

        Parameters
        ----------
        request : Request
            The incoming request.
        call_next : RequestResponseEndpoint
            Next middleware or endpoint on the execution stack

        Returns
        -------
        Response
            The response generated by the middleware.
        """

        body = await request.body()
        body = json.loads(body)

        queue = body["message"]["attributes"]["queue"]

        if "/" in queue:
            queue = queue.rsplit("/")[-1]

        request.scope["path"] = "/" + queue

        return await call_next(request)
