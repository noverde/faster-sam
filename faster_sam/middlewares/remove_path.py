from starlette.requests import Request
from starlette.responses import Response

from starlette.types import ASGIApp, Receive, Scope, Send


class RemovePathMiddleware:
    """
    Removes a specified part of the request path.

    e.g

    This example apply the middleware to transform the request path from "/foo/bar" to "/bar"
    by removing a specified part ("/foo").

    >>> app = FastAPI()
    >>> app.add_middleware(RemovePathMiddleware, path="/foo")
    >>> @app.get("/bar")
    ... def bar():
    ...     return {"message": "Responding to GET /foo/bar}

    Parameters
    ----------
        app : ASGIApp
            Application instance the middleware is being registered to.
        path : str
            The part of the path to be removed from incoming requests.
    """

    def __init__(self, app: ASGIApp, path: str) -> None:
        """
        Initializes the RemovePathMiddleware.
        """
        self.app = app
        self.path = path

    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> Response:
        """
        Removes the specified part of the request path.

        Parameters
        ----------
        request : Request
            The incoming request.
        call_next : RequestResponseEndpoint
            Next middleware or endpoint on the execution stack

        Returns
        -------
        Response
            The response generated by the middleware.
        """

        request = Request(scope)
        request.scope["path"] = request.scope["path"].replace(self.path, "", 1)
        return await self.app(scope, receive, send)
